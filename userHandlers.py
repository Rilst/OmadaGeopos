import redis
import aiosqlite
from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.types import FSInputFile

router = Router()
clinetpos = redis.Redis(host='localhost', port=6379, db=2, decode_responses=True)

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command(commands=["start"]))
async def cmd_start(message: types.Message):
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å", request_contact=True))
    builder.adjust(2)
    await message.answer(f"–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ, –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –±–æ—Ç –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä. –Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.\n"
                         f"–î–ª—è –ø—Ä–∞–≤–ª–∏–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –æ—Ç–∫—Ä—ã—Ç–æ–π WiFi —Å–µ—Ç–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n"
                         f"–ü–æ–º–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –±–æ—Ç—É –¥–æ—Å—Ç—É–ø –∫ –í–∞—à–µ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", reply_markup=builder.as_markup(resize_keyboard=True))
#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞
@router.message(F.contact)
async def get_contact(message: types.Message):
    contact = message.contact
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text="üö©–ì–¥–µ —è –Ω–∞—Ö–æ–∂—É—Å—å?"))
    builder.adjust(2)
    async with aiosqlite.connect('TGContacts.db') as db:
        await db.execute('INSERT OR REPLACE INTO Contacts (PhoneNumber, ChatID)'
                                'VALUES (?,?)', (contact.phone_number, message.chat.id))
        await db.commit()
    await message.answer(f"–°–ø–∞—Å–∏–±–æ, {contact.first_name}.\n"
                         f"–í–∞—à –Ω–æ–º–µ—Ä {contact.phone_number} –±—ã–ª –ø–æ–ª—É—á–µ–Ω\n"
                         f"–¢–µ–ø–µ—Ä—å –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–µ—â–∞–µ–º—ã—Ö –∑–æ–Ω–∞—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è!",
                         reply_markup=builder.as_markup(resize_keyboard=True))
#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
@router.message(F.text == "üö©–ì–¥–µ —è –Ω–∞—Ö–æ–∂—É—Å—å?")
async def productList_handler(message: types.Message):
    apmac = clinetpos.get(message.chat.id)
    if apmac != None:
        async with aiosqlite.connect('Positions.db') as db:
            answer = await db.execute_fetchall('SELECT PosText, PicName FROM Positions WHERE AP_MAC = ?', (apmac,))
            await db.commit()
            if answer[0][1] != None:
                await message.answer_photo(photo=FSInputFile(f"media/{answer[0][1]}"), caption=answer[0][0])
            else:
                await message.answe(photo=FSInputFile(f"media/{answer[0][1]}"), caption=answer[0][0])

    else:
        await message.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –ª–∏ –í—ã –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
                            ', —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∞–∫–∫–∞—É–Ω—Ç–∞ —Å —Ç–µ–º –∫–æ—Ç–æ—Ä—ã–π –≤–≤–æ–¥–∏–ª—Å—è –ø—Ä–∏ WiFi –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.')
